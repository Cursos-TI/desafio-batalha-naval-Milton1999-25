#include <stdio.h>

#define TAM_TABULEIRO 10
#define TAM_NAVIO 3

// Função para imprimir o tabuleiro
void imprimirTabuleiro(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO]) {
    printf("Tabuleiro:\n");
    for (int i = 0; i < TAM_TABULEIRO; i++) {
        for (int j = 0; j < TAM_TABULEIRO; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

int main() {
    // Inicializa o tabuleiro com água (0)
    int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO] = {0};

    // Coordenadas iniciais do navio horizontal
    int linhaH = 2;
    int colunaH = 4;

    // Coordenadas iniciais do navio vertical
    int linhaV = 5;
    int colunaV = 1;

    // Verificações de limites
    if (colunaH + TAM_NAVIO > TAM_TABULEIRO) {
        printf("Navio horizontal fora do limite do tabuleiro.\n");
        return 1;
    }

    if (linhaV + TAM_NAVIO > TAM_TABULEIRO) {
        printf("Navio vertical fora do limite do tabuleiro.\n");
        return 1;
    }

    // Verifica se há sobreposição
    int sobreposicao = 0;
    for (int i = 0; i < TAM_NAVIO; i++) {
        if (tabuleiro[linhaH][colunaH + i] == 3 || tabuleiro[linhaV + i][colunaV] == 3) {
            sobreposicao = 1;
            break;
        }
    }

    if (sobreposicao) {
        printf("Erro: os navios se sobrepõem.\n");
        return 1;
    }

    // Posiciona o navio horizontal no tabuleiro
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linhaH][colunaH + i] = 3;
    }

    // Posiciona o navio vertical no tabuleiro
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linhaV + i][colunaV] = 3;
    }

    // Imprime o tabuleiro final
    imprimirTabuleiro(tabuleiro);

    return 0;
}
